{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/product-service.service.ts","./src/app/services/category-service.service.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/services/auth-service.service.ts","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/category/category.component.ts","./src/app/category/category.component.html","./src/app/services/cart-srvice.service.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/product-item/product-item.component.ts","./src/app/product-item/product-item.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductServiceService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getAllProduct(){\n    return this.http.get('/api/product/all')\n  }\n  getAllProductsByCategoryID(categoryID: string){\n    return this.http.post('/api/product/productsByCategory', { categoryID })\n  }\n  updateProduct(id, params){\n    return this.http.post('/api/product/update', {id, params})\n  }\n  addNewProduct(product){\n    return this.http.post('/api/product/add', { product })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getCategories(){\n    return this.http.get('/api/category/all')\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ProductServiceService } from '../services/product-service.service';\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  @Input() categoryID: string;\n  @Input() products: Array<{}>;\n  @Input() isAdmin: boolean;\n  @Output() wasChange = new EventEmitter();\n  @Output() addProductToCart = new EventEmitter();\n\n  productName: string;\n  price: number;\n  img: string;\n  \n  constructor( private productService: ProductServiceService ) { }\n\n  addProduct(){    \n    const productName = this.productName;\n    const categoryID = this.categoryID;\n    const price = this.price;\n    const img = this.img;\n    this.productService.addNewProduct({productName, categoryID, price, img}).subscribe((res)=>{\n      this.productName = '';\n      this.price = null;\n      this.img = '';\n      this.wasChange.emit();\n    })\n  }\n\n  changesFromChild(){\n    this.wasChange.emit()\n  }\n\n  addToCart($event){\n    this.addProductToCart.emit($event);\n  }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<div class=\"add_product\" *ngIf='isAdmin'>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Product name</mat-label>\n    <input matInput [(ngModel)] = 'productName'>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" >\n    <mat-label>Price</mat-label>\n    <input matInput [(ngModel)] = \"price\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Img url</mat-label>\n    <input matInput [(ngModel)] = \"img\">\n  </mat-form-field>\n  <button mat-button (click)=\"addProduct()\">Add</button>\n</div>\n\n\n\n<div class=\"wrapper\">\n  <section *ngFor=\"let product of products\">\n    <app-product-item  \n      [product] = \"product\" \n      [isAdmin]=\"isAdmin\" \n      [categoryID]=\"categoryID\"\n      (wasChange)='changesFromChild()'\n      (addProductToCart)= \"addToCart($event)\"\n    ></app-product-item>\n  </section>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'jbServer';\n}\n","\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { CategoryServiceService } from '../services/category-service.service';\nimport { ProductServiceService } from '../services/product-service.service';\nimport { AuthServiceService } from '../services/auth-service.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  categories: Array<{_id:number, categoryName:string}>;\n  categoryID: string;\n  products:any [];\n  isAdmin:boolean = true;\n  user: any\n  \n\n\n\n  constructor(\n    private categoryService: CategoryServiceService,\n    private productService: ProductServiceService,\n    private router: Router,\n    private auth: AuthServiceService\n    ) { }\n\n  ngOnInit(): void {\n    this.categoryService.getCategories().subscribe((response:Array<{_id:number, categoryName:string}> )=>{\n      this.categories = response;\n    });\n    this.auth.getSession().subscribe( (res: any) => {\n      if(!res.passport){\n        this.moveToLogin()\n      }\n      else{\n        this.user = res.passport.user;\n        if(this.user.role === \"admin\"){\n          this.router.navigate(['admin']);\n        }\n        else{\n          this.moveToLogin()\n        }\n      }\n    })\n  }\n  \n  moveToLogin(){\n    this.router.navigate(['/login'])\n  }\n\n  selectCategory($event){\n    this.categoryID = $event;\n    console.log(this.categoryID);\n    this.getAllProductsByCategoryID();\n  }\n\n  getAllProductsByCategoryID(){\n    this.productService.getAllProductsByCategoryID(this.categoryID).subscribe((response: Array<{}>)=>{\n      this.products = response;\n      console.log(this.products);\n    })\n  }\n\n  wasChange(){\n    this.getAllProductsByCategoryID();\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"wrapper\">\n    <div class=\"left-side\">\n        <mat-list role=\"list\">\n            <app-category \n                [categories]='categories' \n                (categoryID)='selectCategory($event)'\n            ></app-category>\n        </mat-list>\n    </div>\n    <div class=\"right-side\">\n        <app-product \n            [products]='products' \n            [isAdmin]=\"isAdmin\" \n            [categoryID]=\"categoryID\" \n            *ngIf='categoryID'\n            (wasChange) = \"wasChange()\" \n        ></app-product>\n\n\n        <div *ngIf='!categoryID' class=\"no_category\">  NO CATEGORY SELETED  </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  constructor(private http: HttpClient) { }\n  \n  getSession(){\n    return this.http.get('/api/auth/valid' );\n  }\n\n  login(username, password){\n    const options = {\n      withCredentials: false\n    }\n    return this.http.post('/api/auth/login', { username, password } , options)\n  }\n\n  logout(){\n    return this.http.get('/api/auth/logout');\n  }\n\n  signup(user){\n    return this.http.post('/api/auth/registrate', {user})\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { MatListModule } from '@angular/material/list';\nimport { AdminComponent } from './admin/admin.component';\nimport { CategoryComponent } from './category/category.component';\nimport { ProductComponent } from './product/product.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { ProductItemComponent } from './product-item/product-item.component';\nimport { CartComponent } from './cart/cart.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport { OrderComponent } from './order/order.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent,\n    SignupComponent,\n    NavbarComponent,\n    AdminComponent,\n    CategoryComponent,\n    ProductComponent,\n    ProductItemComponent,\n    CartComponent,\n    OrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../services/auth-service.service';\nimport { CartSrviceService } from '../services/cart-srvice.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  @Input() wasChange: EventEmitter<boolean>;\n\n  cart: any;\n  cartItems: any;\n  showCart: boolean = false;\n  user: any;\n  totalPriceForAllCart: number;\n\n  constructor(\n    private router: Router,\n    private cartService: CartSrviceService,\n    private auth: AuthServiceService\n    ) { }\n\n  ngOnInit(): void { \n    this.auth.getSession().subscribe((res: any)=>{ this.user = res.passport.user })\n    this.getCart();\n    this.wasChange.subscribe((res)=>{\n      this.getCart();\n    })\n  }\n\n  getCart(){\n    this.cartService.getCart().subscribe((res)=>{\n      this.cart = res;\n      this.cartController();\n    });\n  }\n\n  cartController(){\n   if(this.cart){\n    if( this.cart.length == 0){\n      this.cartService.addNewCart(this.user._id).subscribe( (res: any) => { \n        this.cart = res;\n        return\n      })\n    }else{\n      this.cartService.getAllCartItems(this.cart[0]._id).subscribe((res)=>{\n        \n        this.cartItems = res;\n        console.log(res)\n        this.getTotalPriceForAllCart()\n      })\n    }\n   }\n  }\n\n  toggle(){\n    this.showCart = !this.showCart;\n  }\n\n  getTotalPriceForAllCart(){\n    this.totalPriceForAllCart = this.sum(\"totalPrice\").toFixed(2);\n\n  }\n\n  sum(key) {\n    return this.cartItems.reduce((a, b) => a + (b[key] || 0), 0);\n  }\n\n  addItem(cartItem){\n    console.log(cartItem);\n    this.cartService.addCartItem(cartItem).subscribe((res)=>{\n      this.cartService.getAllCartItems(cartItem.cartID).subscribe((res)=>{\n        this.cartItems = res\n      })\n    })\n  }\n\n\n  decrementItem(cartItem){\n    this.cartService.decrementItemCount(cartItem).subscribe((res)=>{\n      this.cartService.getAllCartItems(cartItem.cartID).subscribe((res)=>{\n        this.cartItems = res\n      })\n    })\n  }\n\n  moveToOrder(){\n    this.router.navigate(['order'])\n  }\n}\n","<div class=\"icon\" (click)=\"toggle()\">\n    <mat-icon class=\"icon_cart\">add_shopping_cart</mat-icon>\n</div>\n\n\n<div class=\"cart\" *ngIf=\"showCart\">\n    <table>\n        <tr>\n            <th>Product name</th>\n            <th>Product count</th>\n            <th>Product price</th>\n            <th>Add/Remove item</th>\n        </tr>\n        <tr *ngFor=\"let cartItem of cartItems\">\n            <td>\n                {{cartItem.productName}}\n            </td>\n            <td>\n                {{cartItem.count}}\n            </td>\n            <td>\n                {{cartItem.totalPrice}}\n            </td>\n            <td>\n                <button (click)=\"addItem(cartItem)\" >+</button>\n                <button (click)=\"decrementItem(cartItem)\">-</button>\n            </td>\n        </tr>\n    </table>\n    <div class=\"cart_bottom\">\n        <p class=\"cart_bottom_price\">totalPrice: {{totalPriceForAllCart}}</p>\n        <button class=\"cart_bottom_btn\" (click)=\"moveToOrder()\" *ngIf=\"cartItems.length>0\" >buy now</button>\n    </div>\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  @Input() categories: Array<{\n    _id:number, \n    categoryName:string\n  }>\n\n  @Output() categoryID = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickOnCategory(id){\n    this.categoryID.emit(id)\n  }\n\n\n}\n","<mat-list role=\"list\">\n    <section *ngFor=\"let category of categories\">\n        <mat-list-item role=\"listitem\" (click)=clickOnCategory(category._id) class=\"category_item\" ><span class=\"category_color\">{{category.categoryName}}</span></mat-list-item>\n    </section>\n</mat-list>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartSrviceService {\n\n  constructor(private http: HttpClient) { }\n\n  getCart(){\n    return this.http.get('/api/cart/all')\n  }\n  addNewCart(clientID){\n    return this.http.post('/api/cart/add', { clientID })\n  }\n  addCartItem(item){\n    return this.http.post('/api/cart-item/add', item )\n  }\n  getAllCartItems( cartID ){\n    return this.http.post('/api/cart-item/all', {cartID})\n  }\n  decrementItemCount(item){\n    return this.http.post('/api/cart-item/decrement', item)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../services/auth-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  \n\n  constructor(\n    private router: Router,\n    private auth: AuthServiceService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  doLogout(){\n    this.auth.logout().subscribe((res)=>{\n      this.router.navigate(['login'])\n    })\n  }\n\n  goToHome(){\n    this.router.navigate([''])\n  }\n\n}\n","<mat-nav-list>\n    <a mat-list-item (click)=\"goToHome()\" > Home </a>\n    <a mat-list-item (click)=\"doLogout()\" > logout </a>\n </mat-nav-list>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ProductServiceService } from '../services/product-service.service';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css']\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product: { img: string, price: number, productName: string, _id: string };\n  @Input() isAdmin: boolean\n  isEditMode:boolean = false;\n\n  @Input() categoryID: string;\n  productName: string = '';\n  price: number;\n  img: string = '';\n\n  @Output() wasChange = new EventEmitter();\n  @Output() addProductToCart = new EventEmitter();\n\n  constructor(private productService: ProductServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  editModeToggle(){\n    this.isEditMode = !this.isEditMode;\n  }\n\n  saveChanges(){\n    const params = {\n      productName: this.productName, \n      price: this.price,\n      img: this.img\n    }\n    this.productService.updateProduct(this.product._id, params).subscribe((res)=>{\n      this.wasChange.emit();\n      this.editModeToggle();\n    })\n  }\n\n  addToCart(){\n    // console.log(this.product._id)\n    this.addProductToCart.emit(this.product)\n  }\n\n}\n","<mat-card class=\"card\">\n    <mat-card-header class=\"product_header\">\n        <mat-card-title *ngIf='!isEditMode'>Product name: <br> {{product.productName}} </mat-card-title>\n        <input placeholder=\"Product name:\" [(ngModel)] = 'productName' class=\"input\" *ngIf='isEditMode' value=\"productName\">\n    \n        <mat-card-subtitle *ngIf='!isEditMode'>Price: {{product.price}} $ </mat-card-subtitle>\n        <input placeholder=\"Price:\" [(ngModel)] = 'price' class=\"input\"  *ngIf='isEditMode' type=\"number\" value=\"price\">\n    </mat-card-header>\n\n\n    <img mat-card-image src=\"{{product.img}}\" alt=\"product\" *ngIf='!isEditMode' class=\"img\">\n    <input placeholder=\"Img src:\" [(ngModel)] = 'img' class=\"input\"  *ngIf='isEditMode' value=\"img\">\n    <div *ngIf='isEditMode' class=\"product_space\"> \n    </div>\n    <mat-card-actions class=\"product_btns_wrapper\">\n      <button mat-button *ngIf='isAdmin' (click) = \"editModeToggle()\" class=\"product_btn\">Edit</button>\n      <button mat-button *ngIf='!isAdmin' (click) = \"addToCart()\" >Add to cart</button>\n      <button mat-button *ngIf='isEditMode' (click)= \"saveChanges()\" class=\"product_btn\"> Save </button>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../services/auth-service.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  passportId: number;\n  username: '';\n  password: '';\n  confirm: '';\n\n  fName: '';\n  lName: '';\n  city: '';\n  street: '';\n  avatar: '';\n\n\n  firstScreen: boolean = true;\n  constructor(\n    private router: Router,\n    private auth: AuthServiceService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  next(){\n    this.firstScreen = !this.firstScreen;    \n  }\n  backToLogin(){\n    this.router.navigate(['/login']);\n  }\n\n  submit(){\n    const user = {\n      passportId: this.passportId,\n      email: this.username,\n      password: this.password,\n      firstName: this.fName,\n      lastName: this.lName,\n      city: this.city,\n      street: this.street,\n      avatar: this.avatar\n    }\n    this.auth.signup(user).subscribe((res)=>{\n      this.backToLogin()\n    })\n  }\n\n}\n","<!-- FIRST SCREEN -->\n<div class=\"bg\" *ngIf='firstScreen'>\n  <div class=\"loginWrapper\">\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Identity card</mat-label>\n      <input matInput placeholder=\"Identity card\" [(ngModel)]='passportId'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Username(e-mail)</mat-label>\n      <input matInput placeholder=\"Username(e-mail)\" [(ngModel)]='username'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Password</mat-label>\n      <input matInput color=\"primary\" placeholder=\"Password\" type=\"password\" [(ngModel)]='password'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Confirm your password</mat-label>\n      <input matInput color=\"primary\" placeholder=\"Confirm your password\" type=\"password\" [(ngModel)]='confirm'>\n    </mat-form-field>\n    <div class=\"loginBtn\">\n      <button mat-button color=\"primary\" (click)=\"next()\">Next</button>\n    </div>\n    <div class=\"loginBtn\">\n      <button mat-button color=\"primary\" (click)=\"backToLogin()\">Back</button>\n    </div>\n  </div>\n</div>\n\n<!-- SECOND SCREEN -->\n\n<!-- \nfName: '';\nlName: '';\ncity: '';\nstreet: '';\navatar: '';\n -->\n\n<div class=\"bg\" *ngIf='!firstScreen'>\n  <div class=\"loginWrapper\">\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>First name</mat-label>\n      <input matInput placeholder=\"First name\" [(ngModel)]='fName'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Last name</mat-label>\n      <input matInput placeholder=\"Last name\" [(ngModel)]='lName'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>City</mat-label>\n      <input matInput color=\"primary\" placeholder=\"city\" [(ngModel)]='city'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Street</mat-label>\n      <input matInput color=\"primary\" placeholder=\"street\"  [(ngModel)]='street'>\n    </mat-form-field>\n    <mat-form-field class=\"loginInputs\">\n      <mat-label>Avatar(url)</mat-label>\n      <input matInput color=\"primary\" placeholder=\"Avatar(url)\"  [(ngModel)]='avatar'>\n    </mat-form-field>\n    <div class=\"loginBtn\">\n      <button mat-button color=\"primary\" (click)=\"submit()\">Submit</button>\n    </div>\n    <div class=\"loginBtn\">\n      <button mat-button color=\"primary\" (click)=\"next()\">Back</button>\n    </div>\n  </div>\n</div>\n\n","import {\n  Router\n} from '@angular/router';\nimport {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  AuthServiceService\n} from '../services/auth-service.service';\nimport {\n  CartSrviceService\n} from '../services/cart-srvice.service';\nimport * as html2pdf from 'html2pdf.js';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  viewOrderToggle: boolean = true;\n  totalPriceForAllCart: number;\n  cart: any;\n  cartItems: any;\n  creditCard: any;\n  constructor(\n    private router: Router,\n    private cartService: CartSrviceService,\n    private auth: AuthServiceService,\n\n  ) {}\n\n  ngOnInit(): void {\n    this.auth.getSession().subscribe((res: any) => {\n      if (!res.passport) {\n        this.router.navigate(['login']);\n      } else {\n        this.cartService.getCart().subscribe((res) => {\n          this.cart = res;\n          this.cartService.getAllCartItems(this.cart[0]._id).subscribe((res) => {\n            this.cartItems = res;\n            this.getTotalPriceForAllCart();\n          })\n        })\n      }\n    })\n\n  }\n\n\n  getTotalPriceForAllCart() {\n    this.totalPriceForAllCart = this.sum(\"totalPrice\").toFixed(2);\n\n  }\n\n  sum(key) {\n    return this.cartItems.reduce((a, b) => a + (b[key] || 0), 0);\n  }\n\n\n\n  backToOrder() {\n    this.viewOrderToggle = true;\n  }\n\n  confirmOrder() {\n    this.viewOrderToggle = false;\n  }\n\n  submitOrder() {\n    if (this.ValidateCreditCardNumber()) {\n      const options = {\n        filename: 'Bill',\n        image: {\n          type: 'jpeg'\n        },\n        html2canvas: {},\n        jsPDF: {\n          orientation: 'landscape'\n        }\n      }\n\n      const content: Element = document.getElementById('exportToPdfFile');\n      html2pdf()\n        .from(content)\n        .set(options)\n        .save();\n    } else {\n      this.creditCardError()\n    }\n  };\n  creditCardError() {\n    \n  }\n\n  ValidateCreditCardNumber() {\n\n    var ccNum = this.creditCard;\n    var visaRegEx = /^(?:4[0-9]{12}(?:[0-9]{3})?)$/;\n    var mastercardRegEx = /^(?:5[1-5][0-9]{14})$/;\n    var amexpRegEx = /^(?:3[47][0-9]{13})$/;\n    var discovRegEx = /^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/;\n    var isValid = false;\n\n    if (visaRegEx.test(ccNum)) {\n      isValid = true;\n    } else if (mastercardRegEx.test(ccNum)) {\n      isValid = true;\n    } else if (amexpRegEx.test(ccNum)) {\n      isValid = true;\n    } else if (discovRegEx.test(ccNum)) {\n      isValid = true;\n    }\n\n    if (isValid) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"wrapper\" *ngIf=\"viewOrderToggle\" id=\"exportToPdfFile\">\n    <h2>Order Details</h2>\n    <table>\n        <tr>\n        <th>Product name</th>\n        <th>Product count</th>\n        <th>Product price</th>\n    </tr>\n    <tr *ngFor=\"let cartItem of cartItems\">\n        <td>\n            {{cartItem.productName}}\n        </td>\n        <td>\n            {{cartItem.count}}\n        </td>\n        <td>\n            {{cartItem.totalPrice}}\n        </td>\n    </tr>\n</table>\n<div class=\"cart_bottom\">\n    <p class=\"cart_bottom_price\">totalPrice: {{totalPriceForAllCart}}</p>\n    <!-- <button (click)=\"confirmOrder()\" class=\"cart_bottom_btn\">Confirm order</button> -->\n</div>\n\n\n<div class=\"shipping\" >\n    <h2>Shipping details:</h2>\n    <div class=\"input_container\">\n        City: <br> <input type=\"text\">\n    </div>\n    <div class=\"input_container\">\n        Street: <br> <input type=\"text\">\n    </div>\n    <div class=\"input_container\">\n        Date: <br> <input type=\"date\">\n    </div>\n    <h2>Payment:</h2>\n    <div class=\"error\">\n        please enter valid credit card number\n    </div>\n    <div class=\"input_container\">\n        Credit card: <br> <input type=\"number\" id=\"cardNum\" [(ngModel)] = 'creditCard'>\n    </div>    \n    <button (click)=\"submitOrder()\">Submit order</button>\n</div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { OrderComponent } from './order/order.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: '', component: MainComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'order', component: OrderComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../services/auth-service.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  token: any;\n  username: '';\n  password: '';\n\n\n  \n\n  clickOnLogin(){\n    this.auth.login(this.username, this.password).subscribe((res)=>{\n      this.router.navigate(['/']);\n    })\n    \n  }\n\n  moveToSign(){\n    this.router.navigate(['/signup']);\n  }\n\n  constructor(\n    private router: Router,\n    private auth: AuthServiceService\n    ) { }\n\n  ngOnInit(): void {    \n  }\n\n}\n","<div class=\"bg\">\n    <div class=\"loginWrapper\">\n        <mat-form-field class=\"loginInputs\">\n            <mat-label>Username(e-mail)</mat-label>\n            <input matInput placeholder=\"Username(e-mail)\" [(ngModel)] = 'username' class=\"input\">\n        </mat-form-field>\n        <mat-form-field class=\"loginInputs\">\n            <mat-label>Password</mat-label>\n            <input matInput color=\"primary\" placeholder=\"Password\" type=\"password\" [(ngModel)] = 'password'>\n        </mat-form-field>\n        <div class=\"loginBtn\">\n            <button mat-button color=\"primary\" (click)=\"clickOnLogin()\">Login</button>\n        </div>\n        <div class=\"loginBtn\">\n            <button mat-button color=\"primary\" (click)=\"moveToSign()\">SignUp</button>\n        </div>\n        <a href=\"http://localhost:4000/api/oAuth/registration/facebook\">\n            <div class=\"loginBtn\">\n                <button mat-button color=\"primary\">Facebook</button>\n            </div> \n        </a>\n        <a href=\"http://localhost:4000/api/oAuth/registration/google\">\n            <div class=\"loginBtn\">\n                <button mat-button color=\"primary\">Google</button>\n            </div> \n        </a>\n    </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../services/auth-service.service';\nimport { CartSrviceService } from '../services/cart-srvice.service';\nimport { CategoryServiceService } from '../services/category-service.service';\nimport { ProductServiceService } from '../services/product-service.service';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  categories: Array<{_id:number, categoryName:string}>;\n  categoryID: string;\n  products:any [];\n  isAdmin:boolean;\n  user: any;\n  cart: any;\n  public addItemTocart: EventEmitter<boolean> = new EventEmitter();\n  \n\n  constructor( \n    private router: Router,\n    private auth: AuthServiceService,\n    private categoryService: CategoryServiceService,\n    private productService: ProductServiceService,\n    private cartService: CartSrviceService\n    ) { }\n  \n  ngOnInit(): void {\n    this.auth.getSession().subscribe( (res: any) => {\n      if(!res.passport){\n        this.moveToLogin()\n      }\n      else{\n        this.user = res.passport.user;\n        if(this.user.role === \"admin\"){\n          this.isAdmin = true\n          this.router.navigate(['admin']);\n        }else{\n          this.isAdmin = false\n        }\n      }\n    });\n    this.categoryService.getCategories().subscribe( (res: any) => { this.categories = res } );\n    this.productService.getAllProduct().subscribe( (res: any ) => { this.products = res } );\n    this.cartService.getCart().subscribe((res)=>{ \n      this.cart = res[0];\n      console.log(\"**************CART*********************\")\n      console.log(this.cart);\n      console.log(\"**************CART*********************\")\n     })\n  }\n\n\n  selectCategory($event){\n    this.categoryID = $event;\n    this.getAllProductsByCategoryID();\n  }\n\n  getAllProductsByCategoryID(){\n    this.productService.getAllProductsByCategoryID(this.categoryID).subscribe((response: Array<{}>)=>{\n      this.products = response;\n    })\n  }\n\n  moveToLogin(){\n    this.router.navigate(['/login'])\n  }\n  wasChange(){\n    this.getAllProductsByCategoryID();\n  }\n\n  addProductToCart($event){\n    console.log($event);\n    let item = {\n      productID: $event._id,\n      cartID: this.cart._id,\n      count: 1,\n      totalPrice: $event.price,\n      productName: $event.productName\n    }\n    this.cartService.addCartItem(item).subscribe((res)=>{\n      this.addItemTocart.emit(true)\n     })\n  }\n\n \n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"lside\">\n        <app-category\n            [categories]='categories' \n            (categoryID)='selectCategory($event)'\n        ></app-category>\n    </div>\n    <div class=\"rside\">\n        <app-product \n            [products]='products' \n            [isAdmin]=\"isAdmin\" \n            [categoryID]=\"categoryID\" \n            (wasChange) = \"wasChange()\"\n            (addProductToCart) = \"addProductToCart($event)\"\n        ></app-product>\n    </div>\n</div>\n\n<app-cart [wasChange] = \"addItemTocart\" ></app-cart>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}